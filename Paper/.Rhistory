rf_results <- as.data.frame(mtry) %>%
mutate(splitrule = rf$results$splitrule) %>%
mutate(RSME = rf$results$RMSE) %>%
mutate(Rsquared = rf$results$Rsquared) %>%
mutate(MAE = rf$results$MAE)
kable(rf_results, booktabs = T, caption = "Results random forest")
set.seed(123)
resamps <- resamples(list(`Linear Regression`= lmreg, `Random Forest` = rf))
res <- data.frame(summary(resamps)$statistics$Rsquared) # get R^2 out summary
res <- res * 100 # make percentage
res <- res %>%
mutate(model_name = row.names(res))
ggplot(data = res, aes(x = reorder(model_name, Mean), y= Mean)) +
geom_linerange(aes(ymin = Min., ymax = Max.)) +
geom_linerange(aes(ymin = X1st.Qu., ymax =X3rd.Qu.), size = 2.5)+
geom_point(size = 4, shape=22, color = "black", fill = "red")+
coord_flip() +
ylim(0,100)+
ylab("R squared")+
xlab("") +
theme_classic()
df_test <-df_test %>%
mutate(predictionrf= predict(rf, df_test))
ggplot(data= df_test, aes(x= LEtotalpop, y= predictionlm)) + geom_point(color= "green")+ geom_abline(slope = 1, intercept = 0) + geom_point(data=df_test, aes(x=LEtotalpop, y=predictionrf), color= "blue") +theme_classic()
LEIMP <- varImp(rf, scale=FALSE)
plot(LEIMP)
df_ME_health <- ggpredict(lm2, terms= "Health_status_very_good")
df_ME_House_O <- ggpredict(lm2, terms= "House_O")
df_ME_Mean_Inc <- ggpredict(lm2, terms= "Mean_inc")
plot_ME_Health <-ggplot(df_ME_health, aes(x,predicted)) + geom_line(color="firebrick2") + ylim(80,84) +
xlim(0,100)  + xlab("Self-reported health: >= good")  + ylab("Predicted LE")
plot_ME_House_O <-ggplot(df_ME_House_O, aes(x,predicted)) + geom_line(color="royalblue2") + ylim(80,84) +
xlim(0,100) + xlab("House ownership") + ylab("Predicted LE")
plot_ME_Mean_Inc <-ggplot(df_ME_Mean_Inc, aes(x,predicted)) + geom_line(color= "green") +
ylim(80,84) + xlab("Mean standardized income") + ylab("Predicted LE")
plot_grid( plot_ME_House_O, plot_ME_Health, plot_ME_Mean_Inc)
ggplot(d1, aes(x=TotaleBevolking_1, y=LEtotalpop)) + geom_point()+ theme_classic() + xlab("Total population") + ylab("Life expectancy total population")
ggplot(d1, aes(x=log(TotaleBevolking_1), y=LEtotalpop)) + geom_point() + theme_classic()+ xlab("Logarithm of the total population") + ylab("Life expectancy total population")
AddMapLayer(MapPlot(), map_municipal, map_info5) +
guides(fill = guide_legend(title = "Life expectency over 85"))
AddMapLayer(MapPlot(), map_municipal, map_info7) +
guides(fill = guide_legend(title = "Life expectency under 80"))
AddMapLayer(MapPlot(), map_municipal, map_info13) +
guides(fill = guide_legend(title = "Life expectency men"))
AddMapLayer(MapPlot(), map_municipal, map_info14) +
guides(fill = guide_legend(title = "Life expectency women"))
AddMapLayer(MapPlot(), map_municipal, mapinfo15) +
guides(fill = guide_legend(title = "Difference in life expectancy men and women"))
AddMapLayer(MapPlot(), map_municipal, map_info2a) +
guides(fill = guide_legend(title = "CO2 emission per capita"))
AddMapLayer(MapPlot(), map_municipal, map_info3) +
guides(fill = guide_legend(title = "Percent weekly sporters"))
AddMapLayer(MapPlot(), map_municipal, map_info10) +
guides(fill = guide_legend(title = "total Population"))
AddMapLayer(MapPlot(), map_municipal, map_info12) +
guides(fill = guide_legend(title = "House Ownership"))
ggplot(d_MHV, aes(x=GemiddeldeWoningwaarde_99, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Mean house value") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_MHV, aes(x=log(GemiddeldeWoningwaarde_99), y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Logarithm of the Mean house value") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_LOP, aes(x=LagerOpgeleidenPercentage_5, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Percentage lower educated") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_ISM, aes(x=InkomenTot120SociaalMinimum_13, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Income upto 120 percent of the social minimum") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_GGI, aes(x=GemiddeldGestandaardiseerdInkomen_41, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Mean standardized income") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_EGGZG, aes(x=ErvarenGezondheidGoedZeerGoed_1, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Self-reported health: good/very good") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_TMMA, aes(x=TotaalMetMigratieachtergrond_44, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Percentage of people with a migration background") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_ATZ, aes(x=AfstandTotZiekenhuis_216, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Distance to the nearest hospital") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_ATZ, aes(x=log(AfstandTotZiekenhuis_216), y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") +theme_classic()+ xlab("Logarithm of the distance to the nearest hospital") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
library(tidyverse) # for data manipulation and plots
library(PerformanceAnalytics) # for correlation plots
library(thematicmaps)# for maps
library(corrr) # for network graphs of variables
library(corrplot) # for correlation plot
library(ggrepel) # for names in graphs
library(car) # to check for multicollinearity
library(caret) # for machine learning
library(rpart)    # regression tree
library(stargazer) # for regression output
library(rpart.plot) # for plotting regression trees
library(scatterplot3d) # for 3D graph
library(ggeffects) # marginal effects plots
library(cowplot) # to combine marginal effect plots
library(knitr) # for tables
AddMapLayer(MapPlot(), map_municipal, map_info2) +  guides(fill = guide_legend(title = "CO2 emission"))
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
knitr::opts_chunk$set(cache = FALSE)
df_test_plot <-df_test %>%
select(LEtotalpop, predictionlm, predictionrf) %>%
gather(Model, Outcome, 2:3)
knitr::opts_chunk$set(fig.pos = 'H')
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message = FALSE)
knitr::opts_chunk$set(cache = FALSE)
library(tidyverse) # for data manipulation and plots
library(PerformanceAnalytics) # for correlation plots
library(thematicmaps)# for maps
library(corrr) # for network graphs of variables
library(corrplot) # for correlation plot
library(ggrepel) # for names in graphs
library(car) # to check for multicollinearity
library(caret) # for machine learning
library(rpart)    # regression tree
library(stargazer) # for regression output
library(rpart.plot) # for plotting regression trees
library(scatterplot3d) # for 3D graph
library(ggeffects) # marginal effects plots
library(cowplot) # to combine marginal effect plots
library(knitr) # for tables
d1 <- read.csv2("../Datacleaning/Sourcedata/Analysis/Datafile.csv")
map_municipal1 <- read.csv2("../Datacleaning/Sourcedata/Map/nld_municipal_map.csv", stringsAsFactors = FALSE, dec = ".")
map_municipal <- map_municipal1 %>%
mutate(name = replace(name, name == "De Friese Meren", "De Fryske Marren")) %>%
mutate(name = replace(name, name == "Groesbeek"| name == "Millingen aan de Rijn" | name == "Ubbergen", "Berg en Dal")) %>%
mutate(name = replace(name, name == "Bussum"| name == "Naarden" | name == "Muiden", "Gooise Meren")) %>%
mutate(name = replace(name, name == "Nederlek"| name == "Ouderkerk" | name == "Vlist" | name== "Bergambacht" | name == "Schoonhoven", "Krimpenerwaard")) %>%
mutate(name = replace(name, name == "Spijkenisse"| name == "Bernisse", "Nissewaard")) %>%
mutate(name = replace(name, name == "Nuenen. Gerwen en Nederwetten", "Nuenen, Gerwen en Nederwetten"))
map_info <- d1 %>%
select(Gemeente, LEtotalpop)
d1a1 <- d1 %>%
mutate(uitstoot.per.capita = (Totaal.bekende.CO2.uitstoot.2016/TotaleBevolking_1))
map_info2 <- d1 %>%
select(Gemeente, Totaal.bekende.CO2.uitstoot.2016)
map_info2a <- d1a1 %>%
select(Gemeente, uitstoot.per.capita)
map_info3 <- d1 %>%
select(Gemeente, WekelijkseSporters_16)
map_info4 <- d1 %>%
mutate( Hulp= ifelse(LEtotalpop>85,1,0))
map_info5 <- map_info4 %>%
select(Gemeente, Hulp)
map_info6 <- d1 %>%
mutate( Hulp2= ifelse(LEtotalpop<80,1,0))
map_info7 <- map_info6 %>%
select(Gemeente, Hulp2)
map_info8 <- d1 %>%
select(Gemeente, GemiddeldeWoningwaarde_99)
map_info9 <- d1 %>%
select(Gemeente, AfstandTotZiekenhuis_216)
map_info10 <- d1 %>%
select(Gemeente, TotaleBevolking_1)
map_info11 <- d1 %>%
select(Gemeente, TotaalMetMigratieachtergrond_44)
map_info12 <- d1 %>%
select(Gemeente, Koopwoningen_94)
map_info13 <- d1 %>%
select(Gemeente, LEmen)
map_info14 <- d1 %>%
select(Gemeente, LEwomen)
hulpmapinfo15 <- d1 %>%
mutate(Verschil.in.LE = (LEwomen - LEmen))
mapinfo15 <- hulpmapinfo15 %>%
select(Gemeente,  Verschil.in.LE)
map_info16 <- d1 %>%
select(Gemeente, GemiddeldGestandaardiseerdInkomen_41)
map_info17 <- d1 %>%
select(Gemeente, InkomenTot120SociaalMinimum_13)
map_info18 <- d1 %>%
select(Gemeente, ErvarenGezondheidGoedZeerGoed_1)
map_info19 <- d1 %>%
select(Gemeente, k_80JaarOfOuder_21)
d_MHV <- d1 %>%
select(Gemeente, GemiddeldeWoningwaarde_99, LEmen, LEwomen) %>%
gather(Soort, LE, 3:4)
d_LOP <- d1 %>%
select(Gemeente, LagerOpgeleidenPercentage_5, LEmen, LEwomen) %>%
gather(Soort, LE, 3:4)
d_ISM <- d1 %>%
select(Gemeente, InkomenTot120SociaalMinimum_13, LEmen, LEwomen) %>%
gather(Soort, LE, 3:4)
d_GGI <- d1 %>%
select(Gemeente, GemiddeldGestandaardiseerdInkomen_41, LEmen, LEwomen) %>%
gather(Soort, LE, 3:4)
d_EGGZG <- d1 %>%
select(Gemeente, ErvarenGezondheidGoedZeerGoed_1, LEmen, LEwomen) %>%
gather(Soort, LE, 3:4)
d_TMMA <- d1 %>%
select(Gemeente, TotaalMetMigratieachtergrond_44, LEmen, LEwomen) %>%
gather(Soort, LE, 3:4)
d_ATZ <- d1 %>%
select(Gemeente, AfstandTotZiekenhuis_216, LEmen, LEwomen) %>%
gather(Soort, LE, 3:4)
d1a <- d1a1 %>%
select(-X, -Gemeente, -RegioS, - gemeente)
d1b <- d1a %>%
select(LEtotalpop, LEmen, LEwomen, Divorced= Gescheiden_32, Migration = TotaalMetMigratieachtergrond_44, House_O = Koopwoningen_94, Mean_inc = GemiddeldGestandaardiseerdInkomen_41, Lower_edu = LagerOpgeleidenPercentage_5, Pop_density = Bevolkingsdichtheid_57, House_density = Woningdichtheid_93, Mean_HV = GemiddeldeWoningwaarde_99, Dist_Hosp = AfstandTotZiekenhuis_216, Inc_SM = InkomenTot120SociaalMinimum_13, Onepers_HH = Percentage_eenpersoonshuishoudens, Health_status_very_good = ErvarenGezondheidGoedZeerGoed_1, Multi_morbidity = EenOfMeerLangdurigeAandoeningen_2, Normal_weight= NormaalGewicht_9, Fit_norm=VoldoetAanFitnorm_14, Informal_care=UrenMantelzorgPerWeek_19, Weekly_sporters = WekelijkseSporters_16, EmissionCO2=uitstoot.per.capita, Householdsize = GemiddeldeHuishoudensgrootte_89, Total_population = TotaleBevolking_1, Percentage_over80 = k_80JaarOfOuder_21, Total_over80 = k_80JaarOfOuder_12 )
d2 <- d1b %>%
select( -LEmen, -LEwomen, - EmissionCO2)
d2a <- d2 %>%
na.omit()
AddMapLayer(MapPlot(), map_municipal, map_info) +
guides(fill = guide_legend(title = "Life Expectancy at birth"))
stargazer(d2, header = FALSE, type="latex", single.row = TRUE, title = "Descriptive statistics")
corrplot(cor(d2a), method="circle", shade.col=NA, tl.col="black", tl.cex = 0.8)
d2a %>%
correlate() %>%
network_plot(min_cor = .5, repel= TRUE, curved = TRUE, legend = TRUE)
AddMapLayer(MapPlot(), map_municipal, map_info) +
guides(fill = guide_legend(title = "Life Expectancy at birth"))
AddMapLayer(MapPlot(), map_municipal, map_info2) +  guides(fill = guide_legend(title = "CO2 emission"))
AddMapLayer(MapPlot(), map_municipal, map_info9) +
guides(fill = guide_legend(title = "Distance to hospital"))
AddMapLayer(MapPlot(), map_municipal, map_info11) +
guides(fill = guide_legend(title = "population with migration background"))
AddMapLayer(MapPlot(), map_municipal, map_info8) +
guides(fill = guide_legend(title = "Mean House value"))
AddMapLayer(MapPlot(), map_municipal, map_info16) +
guides(fill = guide_legend(title = "Mean standardized income"))
AddMapLayer(MapPlot(), map_municipal, map_info17) +
guides(fill = guide_legend(title = "120% of the social minimum"))
AddMapLayer(MapPlot(), map_municipal, map_info18) +
guides(fill = guide_legend(title = "Self reported health >= good"))
ggplot(d1, aes(x=k_80JaarOfOuder_12, y=LEtotalpop)) + geom_point() + theme_classic()+ xlab("Number of people over 80") + ylab("Life expectancy total population")
ggplot(d1, aes(x=k_80JaarOfOuder_21, y=LEtotalpop)) + geom_point()+geom_smooth(method = "lm") + theme_classic()+ xlab("Percentage of people older than 80") + ylab("Life expectancy total population")
AddMapLayer(MapPlot(), map_municipal, map_info19) +
guides(fill = guide_legend(title = "Percentage of people elder than 80"))
ggplot(data=d2, aes(x= Mean_inc, y=LEtotalpop)) + geom_point() + geom_smooth(method= "lm") + ylab("Life expectancy") + xlab("Mean standardized income")
ggplot(data=d2, aes(x= Mean_HV, y=LEtotalpop)) + geom_point() + geom_smooth(method= "lm") + ylab("Life expectancy") + xlab("Mean House value")
ggplot(data=d2, aes(x= Health_status_very_good, y=LEtotalpop)) + geom_point() + geom_smooth(method= "lm") + ylab("Life expectancy") + xlab("Self reported health >= good")
ggplot(data=d2, aes(x= Inc_SM, y=LEtotalpop)) + geom_point() + geom_smooth(method= "lm") + ylab("Life expectancy") + xlab("Income upto 120 percent of the social minimum")
reg_plot <- lm(LEtotalpop ~ Inc_SM, data=d2a)
# For this plot we will make a new dataframe:
d2_lm_plot <- d2a %>%
select(LEtotalpop, Inc_SM) %>%
mutate(pred = predict(reg_plot, data=d2a))
ggplot(data = d2a, aes(x = Inc_SM, y = LEtotalpop)) +
geom_point() + geom_smooth(method = "lm", se = TRUE) +
geom_segment((aes(x = d2_lm_plot$Inc_SM, y = d2_lm_plot$LEtotalpop, xend = d2_lm_plot$Inc_SM,
yend = d2_lm_plot$pred)), color = "red") + theme_classic() + ylab("Life expectancy total population") + xlab("Income upto 120% of the social minimum")
x  <- d2a$Inc_SM
y  <- d2a$LEtotalpop
z  <- d2a$Health_status_very_good
df <- data.frame(x, y, z)
LM <- lm(y ~ x + z, df)
# scatterplot
s3d <- scatterplot3d(x, z, y, pch = 19, type = "p", color = "darkgrey",
main = "", xlab = "Income upto 120 % of the social minimum", ylab = "Life expectancy total population" ,   zlab = "Self-reported health status good to very good", grid = TRUE, box = FALSE,
mar = c(2.5, 2.5, 2, 1.5), angle = 55)
# regression plane
s3d$plane3d(LM, draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
# overlay positive residuals
wh <- resid(LM) > 0
s3d$points3d(x[wh], z[wh], y[wh], pch = 19)
df_tree <- d2a %>%
select(LEtotalpop, Inc_SM, Health = Health_status_very_good)
tree <- rpart(LEtotalpop ~. ,data = df_tree)
rpart.plot(tree, yesno = 2, box.palette = "RdYlGn")
lm1 <- lm(LEtotalpop ~  ., data = d2)
stargazer(lm1, header = FALSE, type="latex", single.row = TRUE, title = "Results of the model with all predictors")
stargazer(vif(lm1), header = FALSE, type = "latex", flip = TRUE, title = "Multicollinearity in the first model")
lm1f <- lm(LEtotalpop ~  . -House_density -Total_over80 -Onepers_HH -Inc_SM -Householdsize -Migration, data = d2)
stargazer(vif(lm1f), header = FALSE, type = "latex", flip = TRUE, title = "Multicollinearity in the main model")
lm2 <- lm(LEtotalpop ~  . -House_density -Total_over80 -Onepers_HH -Inc_SM -Householdsize -Migration, data = d2)
stargazer(lm2, header = FALSE, type="latex",  title = "Results of the main model")
# We need complete cases
set.seed(123)
trainIndex <- createDataPartition(d2a$LEtotalpop, p=.8,
list=FALSE,
times =1)
df_train <- d2a[trainIndex,]
df_test <- d2a[-trainIndex,]
lmControl <- trainControl(method = "repeatedcv",
number = 10,
repeats = 5)
lmreg <- train(LEtotalpop ~  . -House_density -Total_over80 -Onepers_HH -Inc_SM -Householdsize -Migration,
data = df_train,
method = "lm",
trControl = lmControl)
RMSE <- lmreg$results$RMSE
lmreg_results <- as.data.frame(RMSE)
lmreg_results <- lmreg_results %>%
mutate(R_squared = lmreg$results$Rsquared) %>%
mutate(MAE =lmreg$results$MAE)
kable(lmreg_results, booktabs = T, caption = "Performance of cross validated regression")
rfControl <- trainControl(method = "repeatedcv",
number = 10,
repeats = 5)
rf <- train(LEtotalpop ~  . ,
data = df_train,
method = "ranger",
importance = "impurity",
trControl = lmControl)
mtry <- rf$results$mtry
rf_results <- as.data.frame(mtry) %>%
mutate(splitrule = rf$results$splitrule) %>%
mutate(RSME = rf$results$RMSE) %>%
mutate(Rsquared = rf$results$Rsquared) %>%
mutate(MAE = rf$results$MAE)
kable(rf_results, booktabs = T, caption = "Results random forest")
set.seed(123)
resamps <- resamples(list(`Linear Regression`= lmreg, `Random Forest` = rf))
res <- data.frame(summary(resamps)$statistics$Rsquared) # get R^2 out summary
res <- res * 100 # make percentage
res <- res %>%
mutate(model_name = row.names(res))
ggplot(data = res, aes(x = reorder(model_name, Mean), y= Mean)) +
geom_linerange(aes(ymin = Min., ymax = Max.)) +
geom_linerange(aes(ymin = X1st.Qu., ymax =X3rd.Qu.), size = 2.5)+
geom_point(size = 4, shape=22, color = "black", fill = "red")+
coord_flip() +
ylim(0,100)+
ylab("R squared")+
xlab("") +
theme_classic()
df_test <-df_test %>%
mutate(predictionlm= predict(lmreg, df_test))
df_test <-df_test %>%
mutate(predictionrf= predict(rf, df_test))
df_test_plot <-df_test %>%
select(LEtotalpop, predictionlm, predictionrf) %>%
gather(Model, Outcome, 2:3)
ggplot(data=df_test_plot, aes(x=LEtotalpop, y=Outcome, color= Model)) + geom_point()+ geom_abline(slope = 1, intercept = 0) + xlim(79,86) + ylim(79,86) +
scale_colour_manual(
name = "Prediction" ,
breaks = c("predictionlm", "predictionrf"),
labels = c("Linear regression \nmain model", "Random forest"),
values = c("royalblue2", "firebrick2")) +
xlab("Actual life expectancy in the test set") +
ylab("Predicted life expectancy in the test set")
LEIMP <- varImp(rf, scale=FALSE)
plot(LEIMP)
df_ME_health <- ggpredict(lm2, terms= "Health_status_very_good")
df_ME_House_O <- ggpredict(lm2, terms= "House_O")
df_ME_Mean_Inc <- ggpredict(lm2, terms= "Mean_inc")
df_ME_Lower_edu <- ggpredict(lm2, terms= "Lower_edu")
plot_ME_Health <-ggplot(df_ME_health, aes(x,predicted)) + geom_line(color="firebrick2") + ylim(80,84) +
xlim(0,100)  + xlab("Self-reported health: >= good")  + ylab("Predicted LE")
plot_ME_House_O <-ggplot(df_ME_House_O, aes(x,predicted)) + geom_line(color="royalblue2") + ylim(80,84) +
xlim(0,100) + xlab("House ownership") + ylab("Predicted LE")
plot_ME_Mean_Inc <-ggplot(df_ME_Mean_Inc, aes(x,predicted)) + geom_line(color= "green") +   ylim(80,84) + xlab("Mean standardized income") + ylab("Predicted LE")
plot_ME_Lower_edu  <-ggplot(df_ME_Lower_edu, aes(x,predicted)) + geom_line(color="purple") + ylim(80,84) +
xlim(0,100)  + xlab("Percentage of lower educated")  + ylab("Predicted LE")
plot_grid( plot_ME_House_O, plot_ME_Health, plot_ME_Mean_Inc, plot_ME_Lower_edu)
ggplot(d1, aes(x=TotaleBevolking_1, y=LEtotalpop)) + geom_point()+ theme_classic() + xlab("Total population") + ylab("Life expectancy total population")
ggplot(d1, aes(x=log(TotaleBevolking_1), y=LEtotalpop)) + geom_point() + theme_classic()+ xlab("Logarithm of the total population") + ylab("Life expectancy total population")
AddMapLayer(MapPlot(), map_municipal, map_info5) +
guides(fill = guide_legend(title = "Life expectency over 85"))
AddMapLayer(MapPlot(), map_municipal, map_info7) +
guides(fill = guide_legend(title = "Life expectency under 80"))
AddMapLayer(MapPlot(), map_municipal, map_info13) +
guides(fill = guide_legend(title = "Life expectency men"))
AddMapLayer(MapPlot(), map_municipal, map_info14) +
guides(fill = guide_legend(title = "Life expectency women"))
AddMapLayer(MapPlot(), map_municipal, mapinfo15) +
guides(fill = guide_legend(title = "Difference in life expectancy men and women"))
AddMapLayer(MapPlot(), map_municipal, map_info2a) +
guides(fill = guide_legend(title = "CO2 emission per capita"))
AddMapLayer(MapPlot(), map_municipal, map_info3) +
guides(fill = guide_legend(title = "Percent weekly sporters"))
AddMapLayer(MapPlot(), map_municipal, map_info10) +
guides(fill = guide_legend(title = "total Population"))
AddMapLayer(MapPlot(), map_municipal, map_info12) +
guides(fill = guide_legend(title = "House Ownership"))
ggplot(d_MHV, aes(x=GemiddeldeWoningwaarde_99, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Mean house value") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_MHV, aes(x=log(GemiddeldeWoningwaarde_99), y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Logarithm of the Mean house value") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_LOP, aes(x=LagerOpgeleidenPercentage_5, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Percentage lower educated") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_ISM, aes(x=InkomenTot120SociaalMinimum_13, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Income upto 120 percent of the social minimum") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_GGI, aes(x=GemiddeldGestandaardiseerdInkomen_41, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic()+ xlab("Mean standardized income") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_EGGZG, aes(x=ErvarenGezondheidGoedZeerGoed_1, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Self-reported health: good/very good") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_TMMA, aes(x=TotaalMetMigratieachtergrond_44, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Percentage of people with a migration background") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_ATZ, aes(x=AfstandTotZiekenhuis_216, y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") + theme_classic() + xlab("Distance to the nearest hospital") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
ggplot(d_ATZ, aes(x=log(AfstandTotZiekenhuis_216), y=LE, group=Soort, color= Soort)) + geom_point() + geom_smooth(method= "lm") +theme_classic()+ xlab("Logarithm of the distance to the nearest hospital") + ylab("Life expectancy") + scale_colour_manual(
values=c("royalblue2", "firebrick2"),
name="Life expectancy",
breaks=c("LEmen", "LEwomen"),
labels=c("men", "women"))
library(tidyverse)
dataLE1 <- read.csv2("../Datacleaning/sourcedata/RIVM/LE.csv") %>%
filter(Geslacht == "Totaal")%>%
select(Gemeente, Bij.geboorte)
colnames(dataLE1)[colnames(dataLE1)=="Bij.geboorte"] <- "LEtotalpop"
dataLE2 <- read.csv2("../Datacleaning/sourcedata/RIVM/LE.csv") %>%
filter(Geslacht == "Mannen")%>%
select(Gemeente, Bij.geboorte)
colnames(dataLE2)[colnames(dataLE2)=="Bij.geboorte"] <- "LEmen"
dataLE3 <- read.csv2("../Datacleaning/sourcedata/RIVM/LE.csv") %>%
filter(Geslacht == "Vrouwen")%>%
select(Gemeente, Bij.geboorte)
colnames(dataLE3)[colnames(dataLE3)=="Bij.geboorte"] <- "LEwomen"
dataLE4 <- full_join(dataLE1, dataLE2, by = "Gemeente")
dataLE <- full_join(dataLE4, dataLE3, by = "Gemeente")
kerncijfers <- read.csv2("../Datacleaning/sourcedata/CBS/kerncijfers.csv")
kerncijfers2 <- kerncijfers %>%
filter(grepl("GM", RegioS)) %>%
filter(TotaleBevolking_1 != "NA")
MD_kerncijfers <- read.csv2("../Datacleaning/sourcedata/CBS/metadata_kerncijfers.csv")
Merge_table <- MD_kerncijfers %>%
select(RegioS = TableInfos, Gemeente = X) %>%
filter(grepl("GM", RegioS))
Merge_table$Gemeente <- as.character(Merge_table$Gemeente)
str(Merge_table)
Merge_table$RegioS <- as.character(Merge_table$RegioS)
kerncijfers2$RegioS <- as.character(kerncijfers2$RegioS)
kerncijfers3 <- right_join(Merge_table, kerncijfers2, by="RegioS")
dataLE$Gemeente <- as.character(dataLE$Gemeente)
kerncijfers3$Gemeente <- as.character(kerncijfers3$Gemeente)
data1 <- inner_join(dataLE, kerncijfers3, by = "Gemeente")
data1a <- data1 %>%
select(LEtotalpop, LEwomen, LEmen, Gemeente, Gescheiden_32, TotaalMetMigratieachtergrond_44, Bevolkingsdichtheid_57, GemiddeldeHuishoudensgrootte_89, Woningdichtheid_93 , Koopwoningen_94 , GemiddeldeWoningwaarde_99 ,  AfstandTotZiekenhuis_216, TotaleBevolking_1, k_80JaarOfOuder_21,k_80JaarOfOuder_12 )
data1a$Gescheiden_32 <- as.numeric(as.character(data1a$Gescheiden_32))
data1a$TotaalMetMigratieachtergrond_44 <- as.numeric(as.character(data1a$TotaalMetMigratieachtergrond_44))
data1a$GemiddeldeHuishoudensgrootte_89 <- as.numeric(as.character(data1a$GemiddeldeHuishoudensgrootte_89))
data1a$Koopwoningen_94 <- as.numeric(as.character(data1a$Koopwoningen_94))
data1a$AfstandTotZiekenhuis_216 <- as.numeric(as.character(data1a$AfstandTotZiekenhuis_216))
data1a$k_80JaarOfOuder_21 <- as.numeric(as.character(data1a$k_80JaarOfOuder_21))
str(data1a)
GF <- read.csv2("../Datacleaning/sourcedata/CBS/gemeentefonds.csv")
GF2 <- GF %>%
filter(grepl("GM", RegioS)) %>%
select(RegioS, GemiddeldGestandaardiseerdInkomen_41, InkomenTot120SociaalMinimum_13, LagerOpgeleidenPercentage_5, Huishoudens_32, Eenpersoonshuishoudens_44) %>%
mutate(Percentage_eenpersoonshuishoudens = (Eenpersoonshuishoudens_44/Huishoudens_32)*100)
GF3 <- GF2 %>%
select(-Huishoudens_32, -Eenpersoonshuishoudens_44)
GF3$GemiddeldGestandaardiseerdInkomen_41 <- as.numeric(as.character(GF3$GemiddeldGestandaardiseerdInkomen_41))
GF3$InkomenTot120SociaalMinimum_13 <- as.numeric(as.character(GF3$InkomenTot120SociaalMinimum_13))
GF3$LagerOpgeleidenPercentage_5 <- as.numeric(GF3$LagerOpgeleidenPercentage_5)
str(GF3)
GF3$RegioS <- as.character(GF3$RegioS)
GF4 <-right_join(Merge_table, GF3, by="RegioS")
GF4$gemeente <- as.character(GF4$Gemeente)
data2 <- left_join(data1a, GF4, by= "Gemeente")
HM <- read.csv2("../Datacleaning/sourcedata/CBS/health_monitor.csv")
summary(HM$Perioden)
HM$RegioS <- as.character(HM$RegioS)
HM2 <- full_join(Merge_table,HM , by="RegioS") %>%
filter(grepl("GM", RegioS)) %>%
filter(Leeftijd == 10000, Marges== "MW00000")
HM3 <- HM2 %>%
select(Gemeente, ErvarenGezondheidGoedZeerGoed_1, EenOfMeerLangdurigeAandoeningen_2, NormaalGewicht_9, VoldoetAanFitnorm_14, UrenMantelzorgPerWeek_19, WekelijkseSporters_16)
str(HM3)
HM3$ErvarenGezondheidGoedZeerGoed_1 <- as.numeric(as.character(HM3$ErvarenGezondheidGoedZeerGoed_1))
HM3$EenOfMeerLangdurigeAandoeningen_2 <- as.numeric(as.character(HM3$EenOfMeerLangdurigeAandoeningen_2))
HM3$NormaalGewicht_9 <- as.numeric(as.character(HM3$NormaalGewicht_9))
HM3$VoldoetAanFitnorm_14 <- as.numeric(as.character(HM3$VoldoetAanFitnorm_14))
HM3$UrenMantelzorgPerWeek_19 <- as.numeric(as.character(HM3$UrenMantelzorgPerWeek_19))
HM3$WekelijkseSporters_16 <- as.numeric(as.character(HM3$WekelijkseSporters_16))
data3 <- left_join(data2, HM3, by= "Gemeente")
str(data3)
RWS <- read.csv2("../Datacleaning/sourcedata/Rijkswaterstaat/CO2.csv", sep =",")
str(RWS)
colnames(RWS)[colnames(RWS)=="Gemeenten"] <- "Gemeente"
rijkswaterstaat1 <- RWS
str(RWS)
data4 <- left_join(data3, rijkswaterstaat1, by= "Gemeente")
write.csv2(data4, "../Datacleaning/Sourcedata/Analysis/Datafile.csv")
lm3 <- lm(Health_status_very_good ~  . -House_density -Total_over80 -Onepers_HH -Inc_SM -LEtotalpop -Householdsize -Migration, data = d2)
stargazer(lm3, header = FALSE, type="latex", single.row = TRUE,  title = "Results of linear regression of health status on other variables")
